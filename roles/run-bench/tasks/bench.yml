---
- name: get bench variable to avoid overriden items
  set_fact:
    bench: '{{ benchmark }}'

- name: check that required variables are defined
  assert:
    that: 'bench is defined and
           all_results is defined and
           docker_flags_machine[ansible_hostname] is defined'

- name: run bench
  shell: >
    docker run {{ docker_flags_all }} \
               {{ docker_flags_machine[ansible_hostname] }} \
               {{ bench.docker_flags }} \
               {{ bench.image_name }} \
               {{ bench.image_args }}
  register: docker_output
  with_sequence: count='{{ iterations }}'

- name: initialize bench output variable
  set_fact:
    all_iterations: []

- name: add results from all iterations
  set_fact:
    all_iterations: '{{ (all_iterations + (item.stdout | from_json)) }}'
  with_items: '{{ docker_output.results }}'

- name: add results to global variable
  set_fact:
    all_results: '{{
      all_results | union(
        [{
          "id": bench.id,
          "docker_flags": (docker_flags_all + " " +
                           docker_flags_machine[ansible_hostname] + " " +
                           bench.docker_flags),
          "image_name": bench.image_name,
          "image_args": bench.image_args,
          "iterations": iterations,
          "tests": all_iterations
        }]
      )
    }}'
