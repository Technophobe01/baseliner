---
- name: pull image
  command: 'docker pull {{ bench.image }}'

- name: initialize docker_flags variable
  set_fact:
    docker_flags: ''

- name: add environment to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} -e {{ item.key }}="{{ item.value }}"'
  with_dict: '{{ bench.env | default({}) }}'
- name: add implicit environment from params variable
  set_fact:
    docker_flags: '{{ docker_flags }} -e {{ item.key }}={{ item.value }}'
  with_dict: '{{ params | default({}) }}'

- name: check if we have host-specific environment
  set_fact:
    env_host_map: '{{ bench.env_host | default({}) }}'
- name: add host-specific environment to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} -e {{ item.key }}="{{ item.value }}"'
  with_dict: '{{ env_host_map[inventory_hostname] | default({}) }}'

- name: add devices to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} --device {{ item }}'
  with_items: '{{ bench.devices | default([]) }}'

- name: add network mode to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} --net={{ bench.network_mode }}'
  when: 'bench.network_mode is defined'

- name: add ipc mode to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} --ipc={{ bench.ipc }}'
  when: 'bench.ipc is defined'

- name: add ports to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} -p {{ item }}'
  with_items: '{{ bench.ports | default([]) }}'

- name: add volumes to docker_flags
  set_fact:
    docker_flags: '{{ docker_flags }} -v {{ item }}'
  with_items: '{{ bench.volumes | default([]) }}'

- name: set entrypoint
  set_fact:
    docker_flags: '{{ docker_flags }} --entrypoint={{ bench.entrypoint }}'
  when: 'bench.entrypoint is defined'

- name: set limits
  set_fact:
    docker_flags: '{{ docker_flags }} --{{ item.key }}={{ item.value }}'
  with_dict: '{{ bench.limits | default({}) }}'

- name: create container
  shell: >
    docker create --rm --name={{ run_id }} \
      {{ docker_flags }} \
      {{ bench.image }} \
      {{ bench.command | default("") }}

- name: start container monitor
  shell: >
    docker pull ivotron/container-monitor && \
    docker run -d \
        -e CONTAINER_ID=`docker inspect --format '{{'{{'}}.Id{{'}}'}}' {{ run_id }}` \
        --privileged \
        -v /tmp:/tmp \
        -v /sys:/sys \
        ivotron/container-monitor
  when: 'gather_container_metrics | default(false)'

- name: run container
  shell: docker start {{ run_id }}

- name: wait for container to finish
  shell: docker wait {{ run_id }}
  async: 108000
  poll: 60
  register: docker_run

- name: record container metrics
  command: cp /tmp/testmetrics.json {{ output_folder }}
  when: 'gather_container_metrics | default(false)'

- name: record elapsed time in output folder
  local_action: shell echo "{{ docker_run.delta }}" > {{ output_folder }}/runtime
  when: 'measure_runtime | default(true)'
