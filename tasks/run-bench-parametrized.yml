---
- name: remove remote results folder
  file:
    path: '{{ remote_results_path }}'
    state: absent
  become: true

- name: create remote results folder
  file:
    path: '{{ remote_results_path }}'
    state: directory
    mode: 0755

- name: initialize parameter dictionary
  set_fact:
    bench_params: {}

- name: populate parameter dictionary
  set_fact:
    bench_params: '{{ bench_params | combine({item.0: item.1})}}'
  with_together:
  - '{{ parameter_names }}'
  - '{{ parameter_values }}'

- name: merge default variables to the benchmark-specific options
  set_fact:
    bench: '{{ (defaults | default({})) | combine(benchmark) }}'

- name: initialize string for path
  set_fact:
    output_folder: '{{ local_results_path }}/benchmark/{{ bench.name }}/machine/{{ inventory_hostname }}'
    run_id: '{{ bench.name }}-{{ inventory_hostname }}'

- name: add key/value pairs for each parameter (if any)
  set_fact:
    output_folder: '{{ output_folder }}/{{ item.key }}/{{ item.value }}'
    run_id: '{{ run_id }}-{{ item.key }}-{{ item.value }}'
  with_dict: '{{ bench_params | default({}) }}'

- name: ensure output folder exists
  local_action:
    module: file
    path: '{{ output_folder }}'
    state: directory

- name: run containerized benchmark
  include_tasks: run-container.yml
  when: bench.image is defined

- name: run compose benchmark
  include_tasks: run-compose.yml
  when: bench.compose is defined

- name: run script benchmark
  include_tasks: run-script.yml
  when: bench.script is defined

- name: download results
  include_tasks: download-output.yml

- name: check if we should fail fast
  include_tasks: fail-fast.yml
